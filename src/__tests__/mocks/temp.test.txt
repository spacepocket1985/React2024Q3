import { fireEvent, render, screen } from '@testing-library/react';
import { beforeEach, describe, expect, test, vi } from 'vitest';


import createFetchMock, { FetchMock } from 'vitest-fetch-mock';
import { store } from '../../store/store';
import { Provider } from 'react-redux';

import { SearchPage } from '../../pages/SearchPage';
import { MemoryRouter } from 'react-router-dom';
import { mockResponseWithID } from './mocksData';

const fetchMock: FetchMock = createFetchMock(vi);
fetchMock.enableMocks();

beforeEach((): void => {
  fetchMock.resetMocks();
  fetchMock.mockResponse(JSON.stringify(mockResponseWithID));
});

describe('Tests for the Detailed Card component:', () => {

  test('Make sure the detailed card component correctly displays the detailed card data.', async () => {
    render(
      <MemoryRouter initialEntries={['searchPage?filter=&pageNumber=1&details=71b093d9-f797-4cd2-acc9-e7f3d5f979d4']}>
        <Provider store={store}>
          <SearchPage/>
        </Provider>
      </MemoryRouter>
    );
    const prevBtn = await screen.findByTestId('prevBtn1');

    expect(prevBtn).toBeInTheDocument;
  });




});
